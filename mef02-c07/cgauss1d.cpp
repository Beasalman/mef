#include "cgauss1d.h"

/* ---------------------------------------------------------------- */

cgauss1d::cgauss1d (int opt) {

    // Fórmula del punto medio.

    if (opt == 0) {
        n = 1;
        x.resize (n, 0);
        peso.resize (n, 0);
    
        x[0] = 0.0;
        peso[0] = 2.0;
    }

    // -----------------------------------------------
    // Fórmula del trapecio.

    else if (opt == 1) {
        n = 2;
        x.resize (n, 0);
        peso.resize (n, 0);
    
        x[0] = -1.0;
        x[1] = 1.0;
    
        peso[0] = 1.0;
        peso[1] = 1.0;
    }

    // -----------------------------------------------
    // Fórmula de Simpson.

    else if (opt == 2) {
        n = 3;
        x.resize (n, 0);
        peso.resize (n, 0);
        double c6 = 1. / 3.;        // (2 / 6)
    
        x[0] = -1.0;
        x[1] = 0.0;
        x[2] = 1.0;
    
        peso[0] = c6;
        peso[1] = 4.0 * c6;
        peso[2] = c6;
    }

    // -----------------------------------------------
    // Fórmula de Gauss con tres nodos.

    else if (opt == 3) {
        double s35 = sqrt (3.0 / 5.0);
        double c59 = 5.0 / 9.0;
    
        n = 3;
        x.resize (n, 0);
        peso.resize (n, 0);
    
        x[0] = -s35;
        x[1] = 0.0;
        x[2] = s35;
    
        peso[0] = c59;
        peso[1] = 8.0 / 9.0;
        peso[2] = c59;
    }

    // -----------------------------------------------
    // Fórmula de Gauss con cuatro nodos.

    else if (opt == 4) {
        double s30 = sqrt (30.0);
        double s65 = 2.0 * sqrt (6./5.);

        n = 4;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -sqrt ((3 + s65) / 7.0);
        x[1] = -sqrt ((3 - s65) / 7.0);
        x[2] = -x[1];
        x[3] = -x[0];

        peso[0] = (18.0 - s30) / 36.0;
        peso[1] = (18.0 + s30) / 36.0;
        peso[2] = peso[1];
        peso[3] = peso[0];
    }

    // -----------------------------------------------
    // Fórmula de Gauss con cinco nodos.

    else if (opt == 5) {
        double s70 = sqrt (70.0);
        double s = 2.0 * sqrt (10.0 / 7.0);
        
        n = 5;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -sqrt (5.0 + s) / 3.0;
        x[1] = -sqrt (5.0 - s) / 3.0;
        x[2] = 0.0;
        x[3] = -x[1];
        x[4] = -x[0];

        peso[0] = (322.0 - 13.0 * s70) / 900.0;
        peso[1] = (322.0 + 13.0 * s70) / 900.0;
        peso[2] = 128.0 / 225.0;
        peso[3] = peso[1];
        peso[4] = peso[0];
    }

    // -----------------------------------------------
    // Fórmula de Gauss con 6 nodos.

    else if (opt == 6) {
        n = 6;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -0.932469514203152050;
        x[1] = -0.661209386466264926;
        x[2] = -0.238619186083196821;
        x[3] = 0.238619186083197432;
        x[4] = 0.661209386466262705;
        x[5] = 0.932469514203152605;

        peso[0] = 0.171324492379170690;
        peso[1] = 0.360761573048137385;
        peso[2] = 0.467913934572692869;
        peso[3] = 0.467913934572688928;
        peso[4] = 0.360761573048139217;
        peso[5] = 0.171324492379170912;
    }

    // -----------------------------------------------
    // Fórmula de Gauss con 7 nodos.

    else if (opt == 7) {
        n = 7;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -0.949107912342755378;
        x[1] = -0.741531185599393239;
        x[2] = -0.405845151377397184;
        x[3] = 0.0;
        x[4] = 0.405845151377396851;
        x[5] = 0.741531185599395348;
        x[6] = 0.949107912342757376;

        peso[0] = 0.129484966168874283;
        peso[1] = 0.279705391489271316;
        peso[2] = 0.381830050505120311;
        peso[3] = 0.417959183673468460;
        peso[4] = 0.381830050505121088;
        peso[5] = 0.279705391489273592;
        peso[6] = 0.129484966168871035;
    }

    // -----------------------------------------------
    // Fórmula de Gauss con 8 nodos.

    else if (opt == 8) {
        n = 8;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -0.960289856497538841;
        x[1] = -0.796666477413624841;
        x[2] = -0.525532409916329657;
        x[3] = -0.183434642495650169;
        x[4] = 0.183434642495650141;
        x[5] = 0.525532409916325216;
        x[6] = 0.796666477413635277;
        x[7] = 0.960289856497532068;

        peso[0] = 0.101228536290372734;
        peso[1] = 0.222381034453382781;
        peso[2] = 0.313706645877876888;
        peso[3] = 0.362683783378373592;
        peso[4] = 0.362683783378347335;
        peso[5] = 0.313706645877903534;
        peso[6] = 0.222381034453365822;
        peso[7] = 0.101228536290377036;
    }

    // -----------------------------------------------
    // Fórmula de Gauss con 9 nodos.

    else if (opt == 9) {
        n = 9;
        x.resize (n,0);
        peso.resize (n,0);

        x[0] = -0.968160239507626641;
        x[1] = -0.836031107326631551;
        x[2] = -0.613371432700592023;
        x[3] = -0.324253423403808305;
        x[4] = 0.0;
        x[5] = 0.324253423403808361;
        x[6] = 0.613371432700592245;
        x[7] = 0.836031107326630885;
        x[8] = 0.968160239507628639;

        peso[0] = 0.081274388361574051;
        peso[1] = 0.180648160694865029;
        peso[2] = 0.260610696402918118;
        peso[3] = 0.312347077040024845;
        peso[4] = 0.330239355001236912;
        peso[5] = 0.312347077040022902;
        peso[6] = 0.260610696402919395;
        peso[7] = 0.180648160694865584;
        peso[8] = 0.081274388361573233;
    }
}

/* ---------------------------------------------------------------- */

